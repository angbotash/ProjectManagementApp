@using Microsoft.AspNetCore.Mvc.TagHelpers
@using ProjectManagementApp.Domain.Entities
@model ProjectManagementApp.Web.ViewModels.EditIssueViewModel

@using (Html.BeginForm("Edit", "Issue", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div asp-validation-summary="ModelOnly"></div>
    <div class="container">
        <h1>EditAsyncAsyncAsync issue "@Model.Name"</h1>
        <hr>
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.ReporterId)
        @Html.HiddenFor(m => m.ProjectId)

        <div>
            @if (User.IsInRole(Role.Supervisor.ToString()))
            {
                <b>@Html.LabelFor(m => m.Name)</b>
                <br/>
                @Html.TextBoxFor(m => m.Name, new {placeholder = "Enter project name"})
                @Html.ValidationMessageFor(m => m.Name)
            }
            else
            {
                <b>@Html.LabelFor(m => m.Name)</b>
                <br/>
                @Model.Name
                @Html.HiddenFor(m => m.Name)
            }
        </div>

        <div>
            @if (User.IsInRole(Role.Supervisor.ToString()) || User.IsInRole(Role.Manager.ToString()))
            {
                <b>@Html.LabelFor(m => m.AssigneeId)</b>
                <br />
                @Html.DropDownListFor(m => m.AssigneeId, @Model.Employees, "Select assignee")
                @Html.HiddenFor(m => m.Employees)
                @Html.ValidationMessageFor(m => m.AssigneeId)
            }
            else
            {
                @if (@Model.Assignee != null)
                {
                    <b>@Html.LabelFor(m => m.AssigneeId)</b>
                    <br />
                    @Model.Assignee.Email
                    @Html.HiddenFor(m => m.AssigneeId)
                    @Html.HiddenFor(m => m.Assignee)
                }
            }
        </div>

        <div>
            <b>@Html.LabelFor(m => m.Status)</b>
            <br />
            @Html.DropDownListFor(m => m.Status, @Model.Statuses, "Select status")
            @Html.HiddenFor(m => m.Statuses)
            @Html.ValidationMessageFor(m => m.Status)
        </div>

        <div>
            <b>@Html.LabelFor(m => m.Comment)</b>
            <br />
            @Html.TextBoxFor(x => x.Comment)
        </div>

        <div>

            
            @if (User.IsInRole(Role.Supervisor.ToString()))
            {
                <b>@Html.LabelFor(m => m.Priority)</b>
                <br />
                @Html.TextBoxFor(m => m.Priority,
                    new { @type="number", min="1", max="10", placeholder = "Enter executor company name" })
                @Html.ValidationMessageFor(m => m.Priority)
            }
            else
            {
                <b>@Html.LabelFor(m => m.Priority)</b>
                <br />
                @Model.Priority
                @Html.HiddenFor(m => m.Priority)
            }
        </div>

        <div>
        </div>
        <hr>

        @using (Html.BeginForm("Edit", "Issue", FormMethod.Post))
        {
            <input type="submit" value="Save" />
        }
    </div>
}

@section scripts{
    <partial name="_ValidationScriptsPartial" />
}